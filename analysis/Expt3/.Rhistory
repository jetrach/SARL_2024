corrRT = NA
incorrRT = NA
for(bi in 1:length(idx)){
if (idx[bi]>3){
if(sum(subjData$trialType[(idx[bi]-3):(idx[bi]-1)] == 'freq') == 3){
if(subjData$corr[idx[bi]]==1){
corrRT[bi] = mean(subjData$rt[(idx[bi]-3):(idx[bi]-1)], na.rm = TRUE)
}else if(subjData$corr[idx[bi]]==0){
incorrRT[bi] = mean(subjData$rt[(idx[bi]-3):(idx[bi]-1)], na.rm = TRUE)
}
}
}}
allcorrRT[ai] = mean(corrRT,na.rm = TRUE)
allincorrRT[ai] = mean(incorrRT,na.rm = TRUE)
}
trailingRT = data.frame('subject' = subjNums, 'corrTrail' = allcorrRT,'incorrTrail' = allincorrRT) %>% gather('infreqCorr','avgRT',2:3)
ggplot(trailingRT, aes(x = infreqCorr, y = avgRT))+geom_bar(stat = "summary", fun = "mean")+geom_point(alpha = .5)+labs(y = 'Trailing average RT (ms)')+scale_x_discrete(name = 'Infrequent trial accuracy', labels = c('Correct', 'Incorrect'))+theme(axis.title.x = element_text(size = 18, face = 'bold'), axis.title.y = element_text(size = 18, face = 'bold'),axis.text.x = element_text(size = 14),axis.text.y = element_text(size = 14), axis.line = element_line(),panel.grid = element_blank(),panel.background = element_rect(fill = "white", colour = "black"),panel.border = element_rect(fill = NA, colour = "white"))+ scale_y_continuous(expand = c(0,0), limits=c(0,425))
#t.test(trailingRT$avgRT~trailingRT$infreqCorr)
rtOverall = testData %>% filter(trialType %in% c("freq","infreq"),corr == 1) %>% dplyr::summarize(avgRT = mean(na.omit(rt)))
rtByCond = testData %>% filter(trialType %in% c("freq","infreq"),corr == 1) %>% group_by(trialType)%>%  dplyr::summarise(avgRT = mean(na.omit(rt)))
rts = data.frame(rtOverall$avgRT, rtByCond$avgRT[1], rtByCond$avgRT[2])
colnames(rts)[1:3] <- c("Overall","Frequent", "Infrequent")
kable(rts, format = "markdown", align = 'c', row.names=F, caption = 'Average RT by attType')
slotData = testData %>% filter(trialType == "reward") %>% group_by(subject)
slotRTBySubj = slotData %>%  dplyr::summarize(avgRT = mean(na.omit(rt)))
ggplot(slotRTBySubj, aes(x = subject, y = avgRT))+geom_bar(stat = "identity")
# also histogram of people with high averages
slotRTBySubj_long = slotRTBySubj %>% filter(avgRT > 2000)
slotData %>% filter(subject %in% c(slotRTBySubj_long$subject), rt > 2000) %>% ggplot(aes(x = rt))+geom_histogram()+facet_wrap(~subject)
# calculate 2sd over mean rt on these and exclude
slotRT_stats = testData %>% filter(trialType == 'reward') %>% group_by(subject) %>% dplyr::summarise(avgRT = mean(rt, na.rm = TRUE), sdRT = sd(rt, na.rm= TRUE))
testData$rewardLongRT = NA
testData$rewardLongRT[testData$subject %in% slotRTBySubj_long$subject] = 1
pointsData = testData %>% filter(trialType == 'points')
ggplot(pointsData, aes(x = blockNum, y = points))+geom_line()
# set up column for 5 quantiles of rewards
rewardSched = c(-6,-11,-7,-3,1,-7,-6,-4,-3,5,-5,-12,19,8,15,13,2,8,4,-6,-4,-1,-11,-2,1,-19,-33,-2,12,14,15,13,19,26,4,0,10,12,20,4,2,-2,-3,-3,-2,-32,6,10,8,6,12,-1,3,10,4,-10,-9,-4,7,-1,9,5,7,-7,0,-2,5,-2,4,19,-1,16,12,13, 15, 10)
quantilesReward = split_quantile(rewardSched,5) # Using 5 bc the design was veryLow/Low/avg/high/veryHigh
maxVL = max(rewardSched[which(quantilesReward == 1)])
maxL = max(rewardSched[which(quantilesReward == 2)])
maxAvg = max(rewardSched[which(quantilesReward == 3)])
maxH = max(rewardSched[which(quantilesReward == 4)])
maxVH = max(rewardSched[which(quantilesReward == 5)])
minVL = min(rewardSched[which(quantilesReward == 1)])
minL = min(rewardSched[which(quantilesReward == 2)])
minAvg = min(rewardSched[which(quantilesReward == 3)])
minH = min(rewardSched[which(quantilesReward == 4)])
minVH = min(rewardSched[which(quantilesReward == 5)])
rlData = testData %>% filter(trialType == 'points')
rlData$pointQuantile = NA
rlData$pointCategory = NA
rlData$pointSign = NA
rlData$pointCategory[rlData$points > maxH] = 'veryHigh'
rlData$pointCategory[rlData$points <= maxH] = 'high'
rlData$pointCategory[rlData$points <= maxAvg] = 'avg'
rlData$pointCategory[rlData$points <= maxL] = 'low'
rlData$pointCategory[rlData$points <= maxVL] = 'veryLow'
rlData$pointQuantile[rlData$points > maxH] = 1
rlData$pointQuantile[rlData$points <= maxH] = 2
rlData$pointQuantile[rlData$points <= maxAvg] = 3
rlData$pointQuantile[rlData$points <= maxL] = 4
rlData$pointQuantile[rlData$points <= maxVL] = 5
rlData$pointSign[rlData$points>0] = 'pos'
rlData$pointSign[rlData$points<=0] = 'neg'
# now add columns for attention performance
rlData$accu_infreq = NA
rlData$avgRT_freq = NA
rlData$sdRT_freq = NA
rlData$CV = NA
for(ai in 1:N){
for(bi in 1:(max(rlData$blockNum)-1)){
idxRel_infreq = which(testData$subject == subjNums[ai] & testData$blockNum == (bi+1) & testData$trialType == 'infreq')
idxRel_freq = which(testData$subject == subjNums[ai] & testData$blockNum == (bi+1) & testData$trialType == 'freq')
accu_infreq = mean(testData$corr[idxRel_infreq],na.rm = TRUE)
avgRT_freq = mean(testData$rt[idxRel_freq],na.rm = TRUE)
sdRT_freq = sd(testData$rt[idxRel_freq],na.rm = TRUE)
cvRT_freq = sdRT_freq/avgRT_freq
rlData$accu_infreq[which(rlData$subject == subjNums[ai] & rlData$blockNum == bi)] = accu_infreq
rlData$avgRT_freq[which(rlData$subject == subjNums[ai] & rlData$blockNum == bi)] = avgRT_freq
rlData$sdRT_freq[which(rlData$subject == subjNums[ai] & rlData$blockNum == bi)] = sdRT_freq
rlData$CV[which(rlData$subject == subjNums[ai] & rlData$blockNum == bi)] = cvRT_freq
}
}
# plot
rewardSignAttPlotArray = rlData %>% group_by(subject,pointSign) %>% dplyr::summarise(avgAccu = mean(accu_infreq,na.rm = TRUE),avgRT = mean(avgRT_freq,na.rm = TRUE),avgSDRT= mean(sdRT_freq,na.rm = TRUE),avgCV = mean(CV,na.rm = TRUE))
ggplot(rewardSignAttPlotArray, aes(x = pointSign, y = avgAccu)) + geom_bar(stat = "summary", fun = "mean")+geom_point()
t.test(rewardSignAttPlotArray$avgAccu[rewardSignAttPlotArray$pointSign == 'neg'],rewardSignAttPlotArray$avgAccu[rewardSignAttPlotArray$pointSign == 'pos'],paired = TRUE)
rewardSignAttPlotArray_strict = rlData %>% filter(is.na(rewardLongRT)) %>%group_by(subject,pointSign) %>% dplyr::summarise(avgAccu = mean(accu_infreq,na.rm = TRUE),avgRT = mean(avgRT_freq,na.rm = TRUE),avgSDRT= mean(sdRT_freq,na.rm = TRUE),avgCV = mean(CV,na.rm = TRUE))
ggplot(rewardSignAttPlotArray_strict, aes(x = pointSign, y = avgAccu)) + geom_bar(stat = "summary", fun = "mean")+geom_point()
t.test(rewardSignAttPlotArray_strict$avgAccu[rewardSignAttPlotArray_strict$pointSign == 'neg'],rewardSignAttPlotArray_strict$avgAccu[rewardSignAttPlotArray_strict$pointSign == 'pos'],paired = TRUE)
rlData$avgRT_detrend = NA
rlData$coefVar_detrend = NA
rlData$accuracy_infreq_detrend = NA
rlData$coefVar_prev_detrend = NA
rlData$accuracy_infreq_prev_detrend = NA
for(si in 1:N){
subData = rlData %>% filter(subject == subjNums[si], !is.na(CV),!is.na(accu_infreq)) # get subject data
sub_avgRT = c(t(subData$avgRT_freq)) # get rt column and transpose
sub_coefVar = c(t(subData$CV)) # get cv column and transpose
sub_accuracy_infreq = c(t(subData$accu_infreq))# get accuracy column and transpose
sub_avgRT_detrend = detrend(sub_avgRT)
sub_coefVar_detrend = detrend(sub_coefVar)
sub_accuracy_infreq_detrend = detrend(sub_accuracy_infreq)
rlData$avgRT_detrend[rlData$subject == subjNums[si]] = sub_avgRT_detrend
rlData$coefVar_detrend[rlData$subject == subjNums[si]] = sub_coefVar_detrend
rlData$accuracy_infreq_detrend[rlData$subject == subjNums[si]] = sub_accuracy_infreq_detrend
}
detrendcheck = rlData %>% group_by(blockNum) %>% filter(!is.na(accu_infreq), !is.na(CV))%>% dplyr::summarize(avgAccu = mean(accu_infreq,na.rm = TRUE), seAccu = se(accu_infreq),avgCV = mean(CV,na.rm = TRUE), seCV= se(CV),avgAccu_detrend = mean(accuracy_infreq_detrend,na.rm = TRUE), seAccu_detrend = se(accuracy_infreq_detrend),avgCV_detrend = mean(coefVar_detrend,na.rm = TRUE), seCV_detrend= se(coefVar_detrend), avgRT = mean(avgRT_freq,na.rm = TRUE), avgRT_detrend = mean(avgRT_detrend,na.rm = TRUE))
ggplot(detrendcheck, aes(x = blockNum, y = avgRT))+geom_line()
ggplot(detrendcheck, aes(x = blockNum, y = avgRT_detrend))+geom_line()
ggplot(detrendcheck, aes(x = blockNum, y = avgAccu))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgAccu-seAccu, ymax = avgAccu+seAccu),alpha = .5)
ggplot(detrendcheck, aes(x = blockNum, y = avgAccu_detrend))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgAccu_detrend-seAccu_detrend, ymax = avgAccu_detrend+seAccu_detrend),alpha = .5)
ggplot(detrendcheck, aes(x = blockNum, y = avgCV))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgCV-seCV, ymax = avgCV+seCV),alpha = .5)
ggplot(detrendcheck, aes(x = blockNum, y = avgCV_detrend))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgCV_detrend-seCV_detrend, ymax = avgCV_detrend+seCV_detrend),alpha = .5)
# plot
ggplot(rewardSignAttPlotArray, aes(x = pointSign, y = avgCV)) + geom_bar(stat = "summary", fun = "mean")+geom_point()
t.test(rewardSignAttPlotArray$avgCV[rewardSignAttPlotArray$pointSign == 'neg'],rewardSignAttPlotArray$avgCV[rewardSignAttPlotArray$pointSign == 'pos'],paired = TRUE)
ggplot(rewardSignAttPlotArray_strict, aes(x = pointSign, y = avgCV)) + geom_bar(stat = "summary", fun = "mean")+geom_point()
t.test(rewardSignAttPlotArray_strict$avgCV[rewardSignAttPlotArray_strict$pointSign == 'neg'],rewardSignAttPlotArray_strict$avgCV[rewardSignAttPlotArray_strict$pointSign == 'pos'],paired = TRUE)
attxreward_detrend = rlData %>% group_by(subject, pointSign) %>% dplyr::summarise(accu = mean(accuracy_infreq_detrend, na.rm = TRUE), cv = mean(coefVar_detrend, na.rm = TRUE))
ggplot(attxreward_detrend, aes(x = pointSign, y = accu))+geom_bar(stat = 'summary', fun.y = 'mean')+geom_point()
ggplot(attxreward_detrend, aes(x = pointSign, y = cv))+geom_bar(stat = 'summary', fun.y = 'mean')+geom_point()
t.test(attxreward_detrend$accu[attxreward_detrend$pointSign == 'pos'],attxreward_detrend$accu[attxreward_detrend$pointSign == 'neg'], paired = TRUE)
mean(attxreward_detrend$accu[attxreward_detrend$pointSign == 'pos'])
mean(attxreward_detrend$accu[attxreward_detrend$pointSign == 'neg'])
t.test(attxreward_detrend$cv[attxreward_detrend$pointSign == 'pos'],attxreward_detrend$cv[attxreward_detrend$pointSign == 'neg'], paired = TRUE)
cohens_d(data.frame(attxreward_detrend),cv ~ pointSign,paired = TRUE)
mean(attxreward_detrend$cv[attxreward_detrend$pointSign == 'pos'])
mean(attxreward_detrend$cv[attxreward_detrend$pointSign == 'neg'])
ggplot(attxreward_detrend, aes(x = pointSign, y = accu))+geom_bar(stat = 'summary', fun.y = 'mean')+geom_point()+facet_wrap(~subject)
ggplot(attxreward_detrend, aes(x = pointSign, y = cv))+geom_bar(stat = 'summary', fun.y = 'mean')+geom_point()+facet_wrap(~subject)
accucv_medSplit_negreward = rlData %>% filter(points <= 0) %>% group_by(subject) %>% mutate(medSplit = split_quantile(points,2)) %>%group_by(subject,medSplit) %>% dplyr::summarise(accu = mean(accu_infreq,na.rm = TRUE), cv = mean(CV, na.rm = TRUE),accu_detrend = mean(accuracy_infreq_detrend,na.rm = TRUE), cv_detrend = mean(coefVar_detrend, na.rm = TRUE))
accucv_medSplit_negreward_wide = accucv_medSplit_negreward %>% pivot_wider(names_from = medSplit, values_from = c(accu, cv, accu_detrend, cv_detrend)) %>% mutate(deltaAccu = accu_1-accu_2, deltaCV = cv_1-cv_2,deltaAccu_detrend = accu_detrend_1-accu_detrend_2, deltaCV_detrend = cv_detrend_1-cv_detrend_2)
sum(accucv_medSplit_negreward_wide$deltaAccu>0)
sum(accucv_medSplit_negreward_wide$deltaCV>0)
sum(accucv_medSplit_negreward_wide$deltaAccu_detrend>0)
sum(accucv_medSplit_negreward_wide$deltaCV_detrend>0)
ggplot(accucv_medSplit_negreward, aes(x = medSplit, y = accu))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
ggplot(accucv_medSplit_negreward, aes(x = medSplit, y = cv))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
ggplot(accucv_medSplit_negreward, aes(x = medSplit, y = accu_detrend))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
ggplot(accucv_medSplit_negreward, aes(x = medSplit, y = cv_detrend))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
t.test(accucv_medSplit_negreward$accu[accucv_medSplit_negreward$medSplit==1],accucv_medSplit_negreward$accu[accucv_medSplit_negreward$medSplit==2], paired = TRUE)
t.test(accucv_medSplit_negreward$cv[accucv_medSplit_negreward$medSplit==1],accucv_medSplit_negreward$cv[accucv_medSplit_negreward$medSplit==2], paired = TRUE)
t.test(accucv_medSplit_negreward$accu_detrend[accucv_medSplit_negreward$medSplit==1],accucv_medSplit_negreward$accu_detrend[accucv_medSplit_negreward$medSplit==2], paired = TRUE)
t.test(accucv_medSplit_negreward$cv_detrend[accucv_medSplit_negreward$medSplit==1],accucv_medSplit_negreward$cv_detrend[accucv_medSplit_negreward$medSplit==2], paired = TRUE)
accucv_medSplit_posreward = rlData %>% filter(points > 0) %>% group_by(subject) %>% mutate(medSplit = split_quantile(points,2)) %>%group_by(subject,medSplit) %>% dplyr::summarise(accu = mean(accu_infreq,na.rm = TRUE), cv = mean(CV, na.rm = TRUE),accu_detrend = mean(accuracy_infreq_detrend,na.rm = TRUE), cv_detrend = mean(coefVar_detrend, na.rm = TRUE))
accucv_medSplit_posreward_wide = accucv_medSplit_posreward %>% pivot_wider(names_from = medSplit, values_from = c(accu, cv, accu_detrend, cv_detrend)) %>% mutate(deltaAccu = accu_1-accu_2, deltaCV = cv_1-cv_2,deltaAccu_detrend = accu_detrend_1-accu_detrend_2, deltaCV_detrend = cv_detrend_1-cv_detrend_2)
sum(accucv_medSplit_posreward_wide$deltaAccu>0)
sum(accucv_medSplit_posreward_wide$deltaCV>0)
sum(accucv_medSplit_posreward_wide$deltaAccu_detrend>0)
sum(accucv_medSplit_posreward_wide$deltaCV_detrend>0)
ggplot(accucv_medSplit_posreward, aes(x = medSplit, y = accu))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
ggplot(accucv_medSplit_posreward, aes(x = medSplit, y = cv))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
ggplot(accucv_medSplit_posreward, aes(x = medSplit, y = accu_detrend))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
ggplot(accucv_medSplit_posreward, aes(x = medSplit, y = cv_detrend))+geom_bar(stat = 'summary', fun.y = 'mean') + geom_point()
t.test(accucv_medSplit_posreward$accu[accucv_medSplit_posreward$medSplit==1],accucv_medSplit_posreward$accu[accucv_medSplit_posreward$medSplit==2], paired = TRUE)
t.test(accucv_medSplit_posreward$cv[accucv_medSplit_posreward$medSplit==1],accucv_medSplit_posreward$cv[accucv_medSplit_posreward$medSplit==2], paired = TRUE)
t.test(accucv_medSplit_posreward$accu_detrend[accucv_medSplit_posreward$medSplit==1],accucv_medSplit_posreward$accu_detrend[accucv_medSplit_posreward$medSplit==2], paired = TRUE)
t.test(accucv_medSplit_posreward$cv_detrend[accucv_medSplit_posreward$medSplit==1],accucv_medSplit_posreward$cv_detrend[accucv_medSplit_posreward$medSplit==2], paired = TRUE)
accucv_medSplit_negreward$order = NA
accucv_medSplit_negreward$order[accucv_medSplit_negreward$medSplit ==1] = 'a_largenegrew'
accucv_medSplit_negreward$order[accucv_medSplit_negreward$medSplit ==2] = 'b_smallnegrew'
accucv_medSplit_posreward$order = NA
accucv_medSplit_posreward$order[accucv_medSplit_posreward$medSplit ==1] = 'c_smallposrew'
accucv_medSplit_posreward$order[accucv_medSplit_posreward$medSplit ==2] = 'd_largeposrew'
accucv_medSplit_posnegreward_detrend = rbind(accucv_medSplit_posreward, accucv_medSplit_negreward)
summary_accu_medSplit_posnegreward_detrend = summarySEwithin(data.frame(accucv_medSplit_posnegreward_detrend), measurevar = 'accu_detrend',withinvars = c('order'), idvar = 'subject')
summary_cv_medSplit_posnegreward_detrend = summarySEwithin(data.frame(accucv_medSplit_posnegreward_detrend), measurevar = 'cv_detrend',withinvars = c('order'), idvar = 'subject')
ggplot(summary_cv_medSplit_posnegreward_detrend, aes(x = order, y = cv_detrend))+geom_point()+geom_errorbar(aes(ymin = cv_detrend-se, ymax = cv_detrend+se, width = 0))+
theme(axis.line=element_line(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black")
,panel.border = element_rect(fill = NA, colour = "white"))
#ggsave('pSARL_cv_detrend_medsplit_splitreward.eps')
ggplot(summary_accu_medSplit_posnegreward_detrend, aes(x = order, y = accu_detrend))+geom_point()+geom_errorbar(aes(ymin = accu_detrend-se, ymax = accu_detrend+se, width = 0))+
theme(axis.line=element_line(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black")
,panel.border = element_rect(fill = NA, colour = "white"))
#ggsave('pSARL_accu_detrend_medsplit_splitreward.eps')
#accuReward = rlData_noNan %>% group_by(subject,rewardSign) %>% dplyr::summarize(avgAcc = mean(accuracy_infreq,na.rm = TRUE)) #*** update when you do rl code
cvrewardsign_detrend = rlData %>% group_by(subject,pointSign) %>% dplyr::summarize(cv_detrend = mean(coefVar_detrend,na.rm = TRUE), cv = mean(CV, na.rm =TRUE))
summaryStats_cvrewardsign_detrend = Rmisc::summarySEwithin(cvrewardsign_detrend,measurevar="cv_detrend", withinvars=c("pointSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
summaryStats_cvrewardsign = Rmisc::summarySEwithin(cvrewardsign_detrend,measurevar="cv", withinvars=c("pointSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(summaryStats_cvrewardsign, aes(x = pointSign, y = cv))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'cv',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=cv-se, ymax=cv+se),size = 1.5, width=0)
#ggsave('rewardsigncv.eps')
t.test(cvrewardsign_detrend$cv[cvrewardsign_detrend$pointSign == 'pos'],cvrewardsign_detrend$cv[cvrewardsign_detrend$pointSign == 'neg'],paired = TRUE)
ggplot(summaryStats_cvrewardsign_detrend, aes(x = pointSign, y = cv_detrend))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'cv_detrend',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=cv_detrend-se, ymax=cv_detrend+se),size = 1.5, width=0)
#ggsave('pSARL_rewardsigncv_detrend.eps')
t.test(cvrewardsign_detrend$cv_detrend[cvrewardsign_detrend$pointSign == 'pos'],cvrewardsign_detrend$cv_detrend[cvrewardsign_detrend$pointSign == 'neg'],paired = TRUE)
cohen.d(cvrewardsign_detrend$cv_detrend[cvrewardsign_detrend$pointSign == 'pos'], cvrewardsign_detrend$cv_detrend[cvrewardsign_detrend$pointSign == 'neg'],paired = TRUE)
#accuReward = rlData_noNan %>% group_by(subject,rewardSign) %>% dplyr::summarize(avgAcc = mean(accuracy_infreq,na.rm = TRUE)) #*** update when you do rl code
accurewardsign_detrend = rlData %>% group_by(subject,pointSign) %>% dplyr::summarize(accu_detrend = mean(accuracy_infreq_detrend,na.rm = TRUE), accu = mean(accu_infreq, na.rm = TRUE))
summaryStats_accurewardsign_detrend = Rmisc::summarySEwithin(accurewardsign_detrend,measurevar="accu_detrend", withinvars=c("pointSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
summaryStats_accurewardsign = Rmisc::summarySEwithin(accurewardsign_detrend,measurevar="accu", withinvars=c("pointSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(summaryStats_accurewardsign, aes(x = pointSign, y = accu))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'accu',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=accu-se, ymax=accu+se),size = 1.5, width=0)
#ggsave('rewardsignaccu.eps')
t.test(accurewardsign_detrend$accu[accurewardsign_detrend$pointSign == 'pos'],accurewardsign_detrend$accu[accurewardsign_detrend$pointSign == 'neg'],paired = TRUE)
ggplot(summaryStats_accurewardsign_detrend, aes(x = pointSign, y = accu_detrend))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'accu_detrend',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=accu_detrend-se, ymax=accu_detrend+se),size = 1.5, width=0)
#ggsave('pSARL_rewardsignaccu_detrend.eps')
mean(accurewardsign_detrend$accu_detrend[accurewardsign_detrend$pointSign == 'pos'])
mean(accurewardsign_detrend$accu_detrend[accurewardsign_detrend$pointSign == 'neg'])
t.test(accurewardsign_detrend$accu_detrend[accurewardsign_detrend$pointSign == 'pos'],accurewardsign_detrend$accu_detrend[accurewardsign_detrend$pointSign == 'neg'],paired = TRUE)
cohen.d(accurewardsign_detrend$accu_detrend[accurewardsign_detrend$pointSign == 'pos'], accurewardsign_detrend$accu_detrend[accurewardsign_detrend$pointSign == 'neg'],paired = TRUE)
cvrewardsign_detrend_IRL = rlData_SARL %>% group_by(subject,rewardSign) %>% dplyr::summarize(cv_detrend = mean(coefVar_detrend,na.rm = TRUE), cv = mean(coefVar, na.rm =TRUE))
summaryStats_cvrewardsign_detrend_IRL = Rmisc::summarySEwithin(cvrewardsign_detrend_IRL,measurevar="cv_detrend", withinvars=c("rewardSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
summaryStats_cvrewardsign_IRL = Rmisc::summarySEwithin(cvrewardsign_detrend_IRL,measurevar="cv", withinvars=c("rewardSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(summaryStats_cvrewardsign_IRL, aes(x = rewardSign, y = cv))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'cv',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=cv-se, ymax=cv+se),size = 1.5, width=0)
#ggsave('rewardsigncv.eps')
t.test(cvrewardsign_detrend_IRL$cv[cvrewardsign_detrend_IRL$rewardSign == 'pos'],cvrewardsign_detrend_IRL$cv[cvrewardsign_detrend_IRL$rewardSign == 'neg'],paired = TRUE)
ggplot(summaryStats_cvrewardsign_detrend_IRL, aes(x = rewardSign, y = cv_detrend))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'cv_detrend',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=cv_detrend-se, ymax=cv_detrend+se),size = 1.5, width=0)
#ggsave('pSARL_rewardsigncv_detrend.eps')
t.test(cvrewardsign_detrend_IRL$cv_detrend[cvrewardsign_detrend_IRL$rewardSign == 'pos'],cvrewardsign_detrend_IRL$cv_detrend[cvrewardsign_detrend_IRL$rewardSign == 'neg'],paired = TRUE)
cohen.d(cvrewardsign_detrend_IRL$cv_detrend[cvrewardsign_detrend_IRL$rewardSign == 'pos'], cvrewardsign_detrend_IRL$cv_detrend[cvrewardsign_detrend_IRL$rewardSign == 'neg'],paired = TRUE)
accurewardsign_detrend_IRL = rlData_SARL %>% group_by(subject,rewardSign) %>% dplyr::summarize(accu_detrend = mean(accuracy_infreq_detrend,na.rm = TRUE), accu = mean(accuracy_infreq, na.rm = TRUE))
summaryStats_accurewardsign_detrend_IRL = Rmisc::summarySEwithin(accurewardsign_detrend_IRL,measurevar="accu_detrend", withinvars=c("rewardSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
summaryStats_accurewardsign_IRL = Rmisc::summarySEwithin(accurewardsign_detrend_IRL,measurevar="accu", withinvars=c("rewardSign"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(summaryStats_accurewardsign_IRL, aes(x = rewardSign, y = accu))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'accu',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=accu-se, ymax=accu+se),size = 1.5, width=0)
#ggsave('rewardsignaccu.eps')
t.test(accurewardsign_detrend_IRL$accu[accurewardsign_detrend_IRL$rewardSign == 'pos'],accurewardsign_detrend_IRL$accu[accurewardsign_detrend_IRL$rewardSign == 'neg'],paired = TRUE)
ggplot(summaryStats_accurewardsign_detrend_IRL, aes(x = rewardSign, y = accu_detrend))+
geom_point(size = 3)+
scale_x_discrete(name = 'reward sign')+
labs(y = 'accu_detrend',x = 'reward sign')+
theme(axis.title.x = element_text(size = 22, face = 'bold'),
axis.title.y = element_text(size = 22, face = 'bold'),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.line = element_line(colour = 'black', size = 2),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
geom_errorbar(aes(ymin=accu_detrend-se, ymax=accu_detrend+se),size = 1.5, width=0)
#ggsave('pSARL_rewardsignaccu_detrend.eps')
t.test(accurewardsign_detrend_IRL$accu_detrend[accurewardsign_detrend_IRL$rewardSign == 'pos'],accurewardsign_detrend_IRL$accu_detrend[accurewardsign_detrend_IRL$rewardSign == 'neg'],paired = TRUE)
cohen.d(accurewardsign_detrend_IRL$accu_detrend[accurewardsign_detrend_IRL$rewardSign == 'pos'], accurewardsign_detrend_IRL$accu_detrend[accurewardsign_detrend_IRL$rewardSign == 'neg'],paired = TRUE)
# exclude blocks where it takes them > 1500ms to respond to the reward trial
rewards = testData %>% filter(trialType == 'reward')
rlData$rt = rewards$rt
rlData$longRTs = NA
rlData$longRTs[rlData$rt > 1500] = 1
rlData_noNan = rlData %>% filter(!is.na(accu_infreq),!is.na(CV))
rlData_noNan$avgRT_detrend = NA
rlData_noNan$coefVar_detrend = NA
rlData_noNan$accuracy_infreq_detrend = NA
rlData_noNan$coefVar_prev_detrend = NA
rlData_noNan$accuracy_infreq_prev_detrend = NA
for(si in 1:N){
subData = rlData_noNan %>% filter(subject == subjNums[si], !is.na(CV),!is.na(accu_infreq)) # get subject data
sub_avgRT = c(t(subData$avgRT_freq)) # get rt column and transpose
sub_coefVar = c(t(subData$CV)) # get cv column and transpose
sub_accuracy_infreq = c(t(subData$accu_infreq))# get accuracy column and transpose
#sub_coefVar_prev = c(t(subData$coefVar_prev)) # get cv column and transpose
#sub_accuracy_infreq_prev = c(t(subData$accuracy_infreq_prev))# get accuracy column and transpose
sub_avgRT_detrend = detrend(sub_avgRT)
sub_coefVar_detrend = detrend(sub_coefVar)
sub_accuracy_infreq_detrend = detrend(sub_accuracy_infreq)
#sub_coefVar_prev_detrend = detrend(sub_coefVar_prev )
#sub_accuracy_infreq_prev_detrend = detrend(sub_accuracy_infreq_prev )
rlData_noNan$avgRT_detrend[rlData_noNan$subject == subjNums[si]] = sub_avgRT_detrend
rlData_noNan$coefVar_detrend[rlData_noNan$subject == subjNums[si]] = sub_coefVar_detrend
rlData_noNan$accuracy_infreq_detrend[rlData_noNan$subject == subjNums[si]] = sub_accuracy_infreq_detrend
#rlData_noNan$coefVar_prev_detrend[rlData_noNan$subject == subjNums[si]] = sub_coefVar_prev_detrend
#rlData_noNan$accuracy_infreq_prev_detrend[rlData_noNan$subject == subjNums[si]] = sub_accuracy_infreq_prev_detrend
}
detrendcheck_noNan = rlData_noNan %>% group_by(blockNum) %>% filter(!is.na(accu_infreq), !is.na(CV))%>% dplyr::summarize(avgAccu = mean(accu_infreq,na.rm = TRUE), seAccu = se(accu_infreq),avgCV = mean(CV,na.rm = TRUE), seCV= se(CV),avgAccu_detrend = mean(accuracy_infreq_detrend,na.rm = TRUE), seAccu_detrend = se(accuracy_infreq_detrend),avgCV_detrend = mean(coefVar_detrend,na.rm = TRUE), seCV_detrend= se(coefVar_detrend), avgRT = mean(avgRT_freq,na.rm = TRUE), avgRT_detrend = mean(avgRT_detrend,na.rm = TRUE))
#detrendcheck_noNan_prev = rlData_noNan %>% group_by(blockNum) %>% filter(!is.na(accu_infreq), !is.na(CV))%>% dplyr::summarize(avgAccu = mean(accuracy_infreq_prev,na.rm = TRUE), seAccu = se(accuracy_infreq_prev),avgCV = mean(coefVar_prev,na.rm = TRUE), seCV= se(coefVar_prev),avgAccu_detrend = mean(accuracy_infreq_prev_detrend,na.rm = TRUE), seAccu_detrend = se(accuracy_infreq_prev_detrend),avgCV_detrend = mean(coefVar_prev_detrend,na.rm = TRUE), seCV_detrend= se(coefVar_prev_detrend))
ggplot(detrendcheck_noNan, aes(x = blockNum, y = avgRT))+geom_line()
ggplot(detrendcheck_noNan, aes(x = blockNum, y = avgRT_detrend))+geom_line()
ggplot(detrendcheck_noNan, aes(x = blockNum, y = avgAccu))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgAccu-seAccu, ymax = avgAccu+seAccu),alpha = .5)
ggplot(detrendcheck_noNan, aes(x = blockNum, y = avgAccu_detrend))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgAccu_detrend-seAccu_detrend, ymax = avgAccu_detrend+seAccu_detrend),alpha = .5)
ggplot(detrendcheck_noNan, aes(x = blockNum, y = avgCV))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgCV-seCV, ymax = avgCV+seCV),alpha = .5)
ggplot(detrendcheck_noNan, aes(x = blockNum, y = avgCV_detrend))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgCV_detrend-seCV_detrend, ymax = avgCV_detrend+seCV_detrend),alpha = .5)
#ggplot(detrendcheck_noNan_prev, aes(x = blockNum, y = avgAccu))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgAccu-seAccu, ymax = avgAccu+seAccu),alpha = .5)
#ggplot(detrendcheck_noNan_prev, aes(x = blockNum, y = avgAccu_detrend))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgAccu_detrend-seAccu_detrend, ymax = avgAccu_detrend+seAccu_detrend),alpha = .5)
#ggplot(detrendcheck_noNan_prev, aes(x = blockNum, y = avgCV))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgCV-seCV, ymax = avgCV+seCV),alpha = .5)
#ggplot(detrendcheck_noNan_prev, aes(x = blockNum, y = avgCV_detrend))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgCV_detrend-seCV_detrend, ymax = avgCV_detrend+seCV_detrend),alpha = .5)
attxreward_detrend_noNan = rlData_noNan %>% group_by(subject, pointSign) %>% dplyr::summarise(accu = mean(accuracy_infreq_detrend, na.rm = TRUE), cv = mean(coefVar_detrend, na.rm = TRUE))
ggplot(attxreward_detrend_noNan, aes(x = pointSign, y = accu))+geom_bar(stat = 'summary', fun.y = 'mean')+geom_point()
ggplot(attxreward_detrend_noNan, aes(x = pointSign, y = cv))+geom_bar(stat = 'summary', fun.y = 'mean')+geom_point()
t.test(attxreward_detrend_noNan$accu[attxreward_detrend_noNan$pointSign == 'pos'],attxreward_detrend_noNan$accu[attxreward_detrend_noNan$pointSign == 'neg'], paired = TRUE)
t.test(attxreward_detrend_noNan$cv[attxreward_detrend_noNan$pointSign == 'pos'],attxreward_detrend_noNan$cv[attxreward_detrend_noNan$pointSign == 'neg'], paired = TRUE)
accuxblocksTOT = rlData %>% group_by(blockNum) %>% filter(!is.na(accu_infreq),!is.na(CV)) %>% dplyr::summarise(accu = mean(accu_infreq,na.rm = TRUE), seAccu = se(accu_infreq),avgCV = mean(CV, na.rm = TRUE),seCV = se(CV))
totCorrels = rlData %>% group_by(subject) %>% filter(!is.na(accu_infreq), !is.na(CV)) %>% dplyr::summarise(accuCorrel = cor(blockNum, accu_infreq,method = 'spearman'), cvCorrel = cor(blockNum, CV,method = 'spearman'))
mean(totCorrels$accuCorrel)
sd(totCorrels$accuCorrel)
mean(totCorrels$cvCorrel)
sd(totCorrels$cvCorrel)
t.test(totCorrels$accuCorrel, mu = 0)
t.test(totCorrels$cvCorrel, mu = 0)
ggplot(accuxblocksTOT, aes(x = blockNum,y = accu))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = accu-seAccu, ymax = accu+seAccu), alpha = .5)
ggplot(accuxblocksTOT, aes(x = blockNum,y = avgCV))+geom_line()+geom_ribbon(aes(x = blockNum, ymin = avgCV-seCV, ymax = avgCV+seCV), alpha = .5)
accudecrement = lmer(accu_infreq ~ blockNum+ (1|subject), data = rlData_noNan)
summary(accudecrement)
cvdecrement = lmer(CV ~ blockNum+ (1|subject), data = rlData_noNan)
summary(cvdecrement)
TOTcors = rlData %>% filter(!is.na(accu_infreq),!is.na(CV)) %>% group_by(subject) %>% dplyr::summarize(accuCorrel = cor(blockNum, accu_infreq), cvCorrel = cor(blockNum,CV))
sum(TOTcors$accuCorrel<0)
sum(TOTcors$cvCorrel<0)
ggplot(TOTcors, aes(x = subject, y = accuCorrel))+geom_point()+geom_hline(yintercept = 0, color = 'red')
ggplot(TOTcors, aes(x = subject, y = cvCorrel))+geom_point()+geom_hline(yintercept = 0, color = 'red')
pointsData = testData %>% filter(trialType == 'points')
ggplot(pointsData, aes(x = blockNum, y = points))+geom_line()+
theme(axis.title.x = element_text(size = 18, face = 'bold'),
axis.title.y = element_text(size = 18, face = 'bold'),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.line = element_line(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.border = element_rect(fill = NA, colour = "white"))+
scale_y_continuous(expand = c(0,0), limits=c(-40,30), breaks = seq(-40,30,10))+
scale_x_continuous(expand = c(0,0), limits=c(0,77), breaks = seq(0,80,10))
#ggsave('pSARLsched.eps')
length(unique(testData_SARL$subject))
accu_all_SARL = testData_SARL %>% filter(trialType %in% c('freq', 'infreq')) %>% group_by(subject) %>% dplyr::summarise(accu = mean(corr,na.rm= TRUE), avgRT = mean(rt,na.rm = TRUE),sdRT = sd(rt,na.rm = TRUE), cv = sd(rt,na.rm = TRUE)/mean(rt,na.rm = TRUE))
accu_all_pSARL = testData %>% filter(trialType %in% c('freq', 'infreq')) %>% group_by(subject) %>% dplyr::summarise(accu = mean(corr,na.rm= TRUE), avgRT = mean(rt,na.rm = TRUE), sdRT = sd(rt,na.rm = TRUE), cv = sd(rt,na.rm = TRUE)/mean(rt,na.rm = TRUE))
t.test(accu_all_SARL$accu,accu_all_pSARL$accu)
t.test(accu_all_SARL$avgRT,accu_all_pSARL$avgRT)
t.test(accu_all_SARL$sdRT,accu_all_pSARL$sdRT)
t.test(accu_all_SARL$cv,accu_all_pSARL$cv)
accu_all_SARL_infreq = testData_SARL %>% filter(trialType %in% c('infreq')) %>% group_by(subject) %>% dplyr::summarise(accu = mean(corr,na.rm= TRUE))
accu_all_pSARL_infreq = testData %>% filter(trialType %in% c('infreq')) %>% group_by(subject) %>% dplyr::summarise(accu = mean(corr,na.rm= TRUE), avgRT = mean(rt,na.rm = TRUE))
t.test(accu_all_SARL_infreq$accu,accu_all_pSARL_infreq$accu)
rt_all_SARL_freq = testData_SARL %>% filter(trialType %in% c('freq')) %>% group_by(subject) %>% dplyr::summarise(avgRT = mean(rt,na.rm= TRUE))
rt_all_pSARL_freq = testData %>% filter(trialType %in% c('freq')) %>% group_by(subject) %>% dplyr::summarise(avgRT = mean(rt,na.rm = TRUE))
t.test(rt_all_SARL_freq$avgRT,rt_all_pSARL_freq$avgRT)
SARL_two_CV = rlData_SARL %>% group_by(subject, rewardSign) %>% dplyr::summarize(cv = mean(coefVar_detrend,na.rm = TRUE))
SARL_two_CV$expt =NA
SARL_two_CV$expt = 'inst'
SARL_three_CV = rlData_noNan %>% group_by(subject, pointSign) %>% dplyr::summarize(cv = mean(coefVar_detrend,na.rm = TRUE))
colnames(SARL_three_CV) = c('subject', 'rewardSign','cv')
SARL_three_CV$expt =NA
SARL_three_CV$expt = 'pass'
SARL_both= rbind(SARL_two_CV,SARL_three_CV)
anova_test(data.frame(SARL_both), dv = cv, wid = subject, within = rewardSign, between = expt, effect.size = 'pes')
ggplot(SARL_both, aes(x = rewardSign, y = cv))+geom_bar(stat = 'summary', fun.y= 'mean')+geom_point()+facet_wrap(~expt)
subjNums_SARL = unique(testData_SARL$subject)
N_SARL = length(subjNums_SARL)
attData_noNan = testData_SARL %>% filter(!is.na(rt), trialType %in% c('freq','infreq'))
attData_noNan$rt_detrend = NA
for(si in 1:N_SARL){
subData = attData_noNan %>% filter(subject == subjNums_SARL[si]) # get subject data
sub_rt = c(t(subData$rt)) # get rt column and transpose
sub_rt_detrend = detrend(sub_rt)
attData_noNan$rt_detrend[attData_noNan$subject == subjNums_SARL[si]] = sub_rt_detrend
}
# just do a few subs bc this is huge
attData_noNan_subs = attData_noNan %>% filter(subject %in% c(subjNums_SARL[1:5]))
ggplot(attData_noNan_subs, aes(x = trialNum, y = rt))+geom_point()+facet_wrap(~subject)
attData_noNan_subs = attData_noNan %>% filter(subject %in% c(subjNums_SARL[1:5]))
ggplot(attData_noNan_subs, aes(x = trialNum, y = rt_detrend))+geom_point()+facet_wrap(~subject)
rtrunnum = attData_noNan %>% filter(trialType == 'freq') %>% group_by(subject, attentionRunNum) %>% dplyr::summarise(avgRT = mean(rt_detrend,na.rm = TRUE))
ggplot(rtrunnum, aes(x = attentionRunNum, y = avgRT))+geom_point()+facet_wrap(~subject)
rtrunnum_rew = attData_noNan %>% filter(trialType == 'freq', attentionRunNum %in% c(1,2,3)) %>% group_by(subject, rew, attentionRunNum) %>% dplyr::summarise(avgRT = mean(rt_detrend,na.rm = TRUE)) %>% filter(!is.na(rew))
ggplot(rtrunnum_rew, aes(x = attentionRunNum, y = avgRT))+geom_point()+facet_wrap(~subject+rew)
t.test(rtrunnum_rew$avgRT[rtrunnum_rew$attentionRunNum == 1 & rtrunnum_rew$rew == 'rew'],rtrunnum_rew$avgRT[rtrunnum_rew$attentionRunNum == 1 & rtrunnum_rew$rew == 'unrew'],paired = TRUE )
checkBinNums = attData_noNan %>% group_by(subject, trialBinsFive) %>% dplyr::summarise(max(attentionRunNum), min(attentionRunNum))
# calculate CV in bins for rewarded and nonrewarded
rewoverBins = attData_noNan %>% group_by(subject,blockNum,rew,trialBins) %>% dplyr::summarise(cv = sd(rt_detrend)/mean(rt_detrend)) %>% filter(!is.na(rew)) %>% group_by(subject,rew, trialBins) %>% dplyr::summarise(avgCV = mean(cv,na.rm = TRUE))
rewoverBins_across = rewoverBins %>% group_by(rew,trialBins) %>% dplyr::summarise(avgCV = mean(avgCV, na.rm = TRUE))
ggplot(rewoverBins_across, aes(x = trialBins, y = avgCV, color = rew))+geom_point()
# add another way to do bins
attData_noNan$trialBins_new = NA
attData_noNan$trialBins_new[attData_noNan$attentionRunNum <= 7] = 1
attData_noNan$trialBins_new[attData_noNan$attentionRunNum > 7] = 2
attData_noNan$trialBins_new[attData_noNan$attentionRunNum >12] = 3
# calculate CV in bins for rewarded and nonrewarded
rewoverBins_new = attData_noNan %>% group_by(subject,blockNum,rew,trialBins_new) %>% dplyr::summarise(cv = sd(rt_detrend)/mean(rt_detrend), sdRT = sd(rt_detrend)) %>% filter(!is.na(rew),!is.na(cv)) %>% group_by(subject,rew, trialBins_new) %>% dplyr::summarise(avgCV = mean(cv,na.rm = TRUE), sdRT = mean(sdRT))
rewoverBins_new_summary = summarySEwithin(data.frame(rewoverBins_new),measurevar="avgCV", withinvars=c("rew", "trialBins_new"),idvar="subject", na.rm=FALSE, conf.interval=.95)
rewoverBins_new_across = rewoverBins_new %>% group_by(rew,trialBins_new) %>% dplyr::summarise(avgCV = mean(avgCV, na.rm = TRUE))
ggplot(rewoverBins_new_summary, aes(x = trialBins_new, y = avgCV, color = rew))+geom_point()+geom_errorbar(aes(ymin = avgCV-se, ymax = avgCV+se))
rewoverBins_new_sdrt_summary = summarySEwithin(data.frame(rewoverBins_new),measurevar="sdRT", withinvars=c("rew", "trialBins_new"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(rewoverBins_new_sdrt_summary, aes(x = trialBins_new, y = sdRT, color = rew))+geom_point()+geom_errorbar(aes(ymin = sdRT-se, ymax = sdRT+se))
# calculate CV in bins for rewarded and nonrewarded
rewoverBins_new_noblocknum = attData_noNan %>% group_by(subject,rew,trialBins_new) %>% dplyr::summarise(cv = sd(rt_detrend)/mean(rt_detrend)) %>% filter(!is.na(rew),!is.na(cv))
rewoverBins_new_noblocknum_summary = summarySEwithin(rewoverBins_new_noblocknum,measurevar="cv", withinvars=c("rew", "trialBins_new"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(rewoverBins_new_noblocknum_summary, aes(x = trialBins_new, y = cv, color = rew))+geom_point()+geom_errorbar(aes(ymin = cv-se, ymax = cv+se))
# add another way to do bins
attData_noNan$trialBins_two = NA
attData_noNan$trialBins_two[attData_noNan$attentionRunNum <= 10] = 1
attData_noNan$trialBins_two[attData_noNan$attentionRunNum > 10] = 2
# calculate CV in bins for rewarded and nonrewarded
rewoverBins_two = attData_noNan %>% group_by(subject,blockNum,rew,trialBins_two) %>% dplyr::summarise(cv = sd(rt_detrend)/mean(rt_detrend)) %>% filter(!is.na(rew), !is.na(cv)) %>% group_by(subject,rew, trialBins_two) %>% dplyr::summarise(avgCV = mean(cv))
rewoverBins_two_summary = summarySEwithin(rewoverBins_two,measurevar="avgCV", withinvars=c("rew", "trialBins_two"),idvar="subject", na.rm=FALSE, conf.interval=.95)
rewoverBins_two_across = rewoverBins_two %>% group_by(rew,trialBins_two) %>% dplyr::summarise(avgCV = mean(avgCV, na.rm = TRUE))
ggplot(rewoverBins_two_summary, aes(x = trialBins_two, y = avgCV, color = rew))+geom_point()+geom_errorbar(aes(ymin = avgCV-ci,ymax = avgCV+ci))
# sanity check on detrended rts
cvComp = attData_noNan %>% filter(!is.na(rew)) %>% group_by(subject,rew) %>% dplyr::summarise(cv = sd(rt_detrend)/mean(rt_detrend), sdRT = sd(rt_detrend), avgRT = mean(rt_detrend))
ggplot(cvComp, aes(x = rew, y = cv))+geom_bar(stat = 'summary', fun.y = 'mean')+geom_point()
cvComp_summary = summarySEwithin(cvComp,measurevar="cv", withinvars=c("rew"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(cvComp_summary, aes(x = rew, y = cv))+geom_point()+geom_errorbar(aes(ymin= cv-se, ymax = cv+se))
cvComp_rt_summary = summarySEwithin(cvComp,measurevar="sdRT", withinvars=c("rew"),idvar="subject", na.rm=FALSE, conf.interval=.95)
ggplot(cvComp_rt_summary, aes(x = rew, y = sdRT))+geom_point()+geom_errorbar(aes(ymin= sdRT-se, ymax = sdRT+se))
# start with the rlData_SARL
rlData_SARL$meanRT_freq_noone = NA
rlData_SARL$sdRT_freq_noone = NA
rlData_SARL$accuracy_infreq_noone = NA
rlData_SARL$threeFreq_noone = NA
rlData_SARL$accuracy_infreq_prev_noone = NA
rlData_SARL$coefVar_noone = NA
rlData_SARL$coefVar_prev_noone = NA
for(ai in 1:N_SARL){
for(bi in 2:nanMax(testData_SARL$rlNum)){
idxRL = which(testData_SARL$subject == subjNums_SARL[ai]& testData_SARL$blockNum == bi & testData_SARL$trialType == 'rl' & testData_SARL$attentionRunNum != 1)
idxRel_freq = which(testData_SARL$subject == subjNums_SARL[ai]& testData_SARL$blockNum == bi & testData_SARL$trialType == 'freq'& testData_SARL$attentionRunNum != 1)
idxRel_infreq = which(testData_SARL$subject == subjNums_SARL[ai]& testData_SARL$blockNum == bi & testData_SARL$trialType == 'infreq'& testData_SARL$attentionRunNum != 1)
idxPrev_freq = which(testData_SARL$subject == subjNums_SARL[ai]& testData_SARL$blockNum == (bi-1) & testData_SARL$trialType == 'freq'& testData_SARL$attentionRunNum != 1)
idxPrev_infreq = which(testData_SARL$subject == subjNums_SARL[ai]& testData_SARL$blockNum == (bi-1) & testData_SARL$trialType == 'infreq'& testData_SARL$attentionRunNum != 1)
idxPrevThree = tail(idxPrev_freq,3)
avgRT = mean(testData_SARL$rt[idxRel_freq],na.rm = TRUE)
sdRT = sd(testData_SARL$rt[idxRel_freq],na.rm = TRUE)
attAccuracy = mean(testData_SARL$corr[idxRel_infreq],na.rm = TRUE)
threeRT = mean(testData_SARL$rt[idxPrevThree],na.rm = TRUE)
attAccuracy_prev = mean(testData_SARL$corr[idxPrev_infreq],na.rm = TRUE)
CV = sdRT/avgRT
avgRT_prev = mean(testData_SARL$rt[idxPrev_freq],na.rm = TRUE)
sdRT_prev = sd(testData_SARL$rt[idxPrev_freq],na.rm = TRUE)
CV_prev = sdRT_prev/avgRT_prev
rlData_SARL$meanRT_freq_noone[which(rlData_SARL$blockNum == bi-1 & rlData_SARL$subject == subjNums_SARL[ai])] = avgRT
rlData_SARL$sdRT_freq_noone[which(rlData_SARL$blockNum == bi-1 & rlData_SARL$subject == subjNums_SARL[ai])] = sdRT
rlData_SARL$accuracy_infreq_noone[which(rlData_SARL$blockNum == bi-1 & rlData_SARL$subject == subjNums_SARL[ai])] = attAccuracy
rlData_SARL$threeFreq_noone[which(rlData_SARL$blockNum == bi-1 & rlData_SARL$subject == subjNums_SARL[ai])] = threeRT
rlData_SARL$accuracy_infreq_prev_noone[which(rlData_SARL$blockNum == bi-1 & rlData_SARL$subject == subjNums_SARL[ai])] = attAccuracy_prev
rlData_SARL$coefVar_noone[which(rlData_SARL$blockNum == bi-1 & rlData_SARL$subject == subjNums_SARL[ai])] = CV
rlData_SARL$coefVar_prev_noone[which(rlData_SARL$blockNum == bi-1 & rlData_SARL$subject == subjNums_SARL[ai])] = CV_prev
}
}
